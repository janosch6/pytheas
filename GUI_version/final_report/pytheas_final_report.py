#!/usr/bin/python3

"""
Last update: April 2021
Author: Luigi D'Ascenzo, PhD - The Scripps Research Institute, La Jolla (CA)
Contact info: dascenzoluigi@gmail.com
GitHub project repository: https://github.com/ldascenzo/pytheas

***DESCRIPTION***
Pytheas filtering algorithm to generate an easy-to-use and organized output file.
Additional information on the output file and the parameters can be found in the Pytheas manual
"""

from gooey import Gooey, GooeyParser
from final_report_library import Pytheas_Output


@Gooey(dump_build_config=True, program_name='Pytheas final report generator', default_size=(1920, 1080))
def pytheas_output():
    description = 'Generate the filtered output csv file based on the user-specified parameters'
    parser = GooeyParser(description=description)

    # Required arguments
    parser.add_argument('Match_file', widget="FileChooser",
                        help="File (txt) generated by the Pytheas matching and scoring algorithm")

    # Optional Arguments
    parser.add_argument('--max_rank', default=99, type=int,
                        help='Maximum rank value for target/decoy sequences (default=99[all])')
    parser.add_argument('--Sp_minimum_cutoff', default=0, type=float,
                        help='Minimum Sp score cutoff for target/decoy sequences (default=0)')
    parser.add_argument('--dSp_maximum_cutoff', default=1, type=float,
                        help='Maximum dSp score cutoff for target/decoy sequences (default=1)')
    parser.add_argument('--dSp2_minimum_cutoff', default=0, type=float,
                        help='Minimum dSp2 score cutoff for target/decoy sequences (default=0)')
    parser.add_argument('--MS1_offset_cutoff', default=None, type=float,
                        help='Maximum MS1 matching offset (ppm) value for target/decoy sequences. It applies to '
                             'positive and negative values (default=no cutoff)')
    parser.add_argument('--output_decoys', action='store_true', default=False,
                        help='Include decoy sequences in the filtered output')
    parser.add_argument('--modified_only', action='store_true', default=False,
                        help='Include only target/decoy sequences with nucleotide modifications in the filtered '
                             'output')
    parser.add_argument('--only_unique_positions', action='store_true', default=False,
                        help='Include only target/decoy sequences mapping to unique sequence positions in the filtered '
                             'output')
    parser.add_argument('--remove_redundant_sequences_with_X', action='store_true', default=False,
                        help='Remove redundant matches containing X, keeping only the highest ranking')

    ####################################################
    args = parser.parse_args()

    output = Pytheas_Output(args.Match_file, args.Sp_minimum_cutoff, args.dSp_maximum_cutoff, args.output_decoys,
                            args.modified_only, args.only_unique_positions, args.max_rank,
                            args.remove_redundant_sequences_with_X, args.dSp2_minimum_cutoff, args.MS1_offset_cutoff)

    output.parse_match_file()


if __name__ == '__main__':
    pytheas_output()
